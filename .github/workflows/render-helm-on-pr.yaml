---
name: Render Helm Charts on PR

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write

jobs:
  render:
    name: Render Helm Charts
    runs-on: ubuntu-latest

    steps:
    - name: Checkout full history
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false
        token: ${{ secrets.PAT }}

    - name: Install Nix
      uses: cachix/install-nix-action@v31
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Cache pre-commit
      uses: actions/cache@v4
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}
        restore-keys: |
          ${{ runner.os }}-precommit-

    - name: Install pre-commit hooks
      run: nix develop --command pre-commit install

    - name: Render changed charts
      run: |
        # Fallback logic for BASE_SHA
        if [ -z "${{ github.event.pull_request.base.sha }}" ]; then
          BASE_SHA=$(git rev-parse HEAD^)
        else
          BASE_SHA=${{ github.event.pull_request.base.sha }}
        fi
        HEAD_SHA=${{ github.sha }}

        git diff --name-only $BASE_SHA $HEAD_SHA \
          | xargs -r -n1 dirname \
          | sort -u \
          | while read -r dir; do
              if [ -f "$dir/render-helm.sh" ]; then
                echo "⏳ Rendering in $dir"
                pushd "$dir"
                nix develop --command ./render-helm.sh
                popd
              else
                echo "⏭  Skipping $dir (no render-helm.sh)"
              fi
            done

    - name: Commit regenerated manifests
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add .
        if git diff --cached --quiet; then
          echo "No changes to commit"
        else
          git commit -m "chore: regenerate Helm manifests"
        fi

    - name: Push changes via PAT
      run: |-
        BRANCH_NAME="${GITHUB_HEAD_REF:-${GITHUB_REF##*/}}"
        echo "Pushing to branch: $BRANCH_NAME"
        git push https://x-access-token:${{ secrets.PAT }}@github.com/${{ github.repository }} HEAD:${BRANCH_NAME}
